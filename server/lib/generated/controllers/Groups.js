'use strict';

// generated by: https://github.com/adafruit/io-swagger-templates
// using the Adafruit IO Swagger docs: https://io.adafruit.com/api/docs/api.json
const Controller = require('../../controller'),
      Group = require('../../models/Group');

class GroupsController extends Controller {

  static all(req, res, next) {

    Group.all()
      .then(this.handleResponse.bind(this, res))
      .catch(this.handleError.bind(this, res));

  }

  static create(req, res, next) {

    const group = req.swagger.params['group'].value;

    Group.create(group)
      .then(this.handleResponse.bind(this, res))
      .catch(this.handleError.bind(this, res));

  }

  static get(req, res, next) {

    const id = req.swagger.params['id'].value;

    Group.get(id)
      .then(this.handleResponse.bind(this, res))
      .catch(this.handleError.bind(this, res));

  }

  static replace(req, res, next) {

    const id = req.swagger.params['id'].value,
          group = req.swagger.params['group'].value;

    Group.replace(id, group)
      .then(this.handleResponse.bind(this, res))
      .catch(this.handleError.bind(this, res));

  }

  static destroy(req, res, next) {

    const id = req.swagger.params['id'].value;

    Group.destroy(id)
      .then(this.handleResponse.bind(this, res))
      .catch(this.handleError.bind(this, res));

  }

  static update(req, res, next) {

    const id = req.swagger.params['id'].value,
          group = req.swagger.params['group'].value;

    Group.update(id, group)
      .then(this.handleResponse.bind(this, res))
      .catch(this.handleError.bind(this, res));

  }

}

exports = module.exports = GroupsController;
